{"version":3,"sources":["../../api/services/order.services.js"],"names":["OrderService","fetchOrders","validOrders","dummyDBData","orders","map","order","newOrder","Order","mealId","quantity","addOrder","push","getOrder","id","orderedMeal","meals","find","meal","Number","orderedQuantity","ordered","updateOrder","data","alreadyordered","index","indexOf","deleteOrder","toBeDeletedOrder","splice"],"mappings":";;;;;;;AAAA;;AAEA;;;;AADA;AAGA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,WADmB,yBACL;AACZ,QAAMC,WAAW,GAAGC,qBAAYC,MAAZ,CAAmBC,GAAnB,CAAuB,UAACC,KAAD,EAAW;AACpD,UAAMC,QAAQ,GAAG,IAAIC,cAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,GAAkBH,KAAK,CAACG,MAAxB;AACAF,MAAAA,QAAQ,CAACG,QAAT,GAAoBJ,KAAK,CAACI,QAA1B;AACA,aAAOH,QAAP;AACD,KALmB,CAApB;;AAMA,WAAOL,WAAP;AACD,GATkB;AAUnBS,EAAAA,QAVmB,oBAUVL,KAVU,EAUH;AACd;AACA;AACA;AAHc,QAING,MAJM,GAIeH,KAJf,CAING,MAJM;AAAA,QAIEC,QAJF,GAIeJ,KAJf,CAIEI,QAJF;;AAKdP,yBAAYC,MAAZ,CAAmBQ,IAAnB,CAAwB;AACtBH,MAAAA,MAAM,EAANA,MADsB;AAEtBC,MAAAA,QAAQ,EAARA;AAFsB,KAAxB;;AAIA,WAAOJ,KAAP;AACD,GApBkB;AAqBnBO,EAAAA,QArBmB,oBAqBVC,EArBU,EAqBN;AACX,QAAMC,WAAW,GAAGZ,qBAAYa,KAAZ,CAAkBC,IAAlB,CAAuB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACJ,EAAL,KAAYK,MAAM,CAACL,EAAD,CAAtB;AAAA,KAA3B,CAApB;;AACA,QAAMM,eAAe,GAAGjB,qBAAYC,MAAZ,CAAmBa,IAAnB,CAAwB,UAAAX,KAAK;AAAA,aAAIA,KAAK,CAACG,MAAN,KAAiBU,MAAM,CAACL,EAAD,CAA3B;AAAA,KAA7B,CAAxB;;AAFW,QAGHJ,QAHG,GAGUU,eAHV,CAGHV,QAHG;AAIX,QAAMW,OAAO,GAAG;AACdN,MAAAA,WAAW,EAAXA,WADc;AAEdL,MAAAA,QAAQ,EAARA;AAFc,KAAhB;AAIA,WAAOW,OAAO,IAAI,EAAlB;AACD,GA9BkB;AA+BnBC,EAAAA,WA/BmB,uBA+BPR,EA/BO,EA+BHS,IA/BG,EA+BG;AACpB,QAAMC,cAAc,GAAGrB,qBAAYC,MAAZ,CAAmBa,IAAnB,CAAwB,UAAAX,KAAK;AAAA,aAAIA,KAAK,CAACG,MAAN,KAAiBU,MAAM,CAACL,EAAD,CAA3B;AAAA,KAA7B,CAAvB;;AACA,QAAMW,KAAK,GAAGtB,qBAAYC,MAAZ,CAAmBsB,OAAnB,CAA2BF,cAA3B,CAAd;;AACArB,yBAAYC,MAAZ,CAAmBqB,KAAnB,EAA0BhB,MAA1B,GAAmCc,IAAI,CAACd,MAAL,IAAee,cAAc,CAACf,MAAjE;AACAN,yBAAYC,MAAZ,CAAmBqB,KAAnB,EAA0Bf,QAA1B,GAAqCa,IAAI,CAACb,QAAL,IAAiBc,cAAc,CAACd,QAArE;AACA,WAAOP,qBAAYC,MAAZ,CAAmBqB,KAAnB,CAAP;AACD,GArCkB;AAsCnBE,EAAAA,WAtCmB,uBAsCPb,EAtCO,EAsCH;AACd,QAAMc,gBAAgB,GAAGzB,qBAAYC,MAAZ,CAAmBa,IAAnB,CAAwB,UAAAX,KAAK;AAAA,aAAIA,KAAK,CAACG,MAAN,KAAiBU,MAAM,CAACL,EAAD,CAA3B;AAAA,KAA7B,CAAzB;;AACA,QAAMW,KAAK,GAAGtB,qBAAYC,MAAZ,CAAmBsB,OAAnB,CAA2BE,gBAA3B,CAAd;;AACAzB,yBAAYa,KAAZ,CAAkBa,MAAlB,CAAyBJ,KAAzB,EAAgC,CAAhC;;AACA,WAAO,EAAP;AACD;AA3CkB,CAArB;eA8CezB,Y","sourcesContent":["import dummyDBData from '../utils/dummyDBData';\n// import Meal from '../models/meal.models';\nimport Order from '../models/order.models';\n\nconst OrderService = {\n  fetchOrders() {\n    const validOrders = dummyDBData.orders.map((order) => {\n      const newOrder = new Order();\n      newOrder.mealId = order.mealId;\n      newOrder.quantity = order.quantity;\n      return newOrder;\n    });\n    return validOrders;\n  },\n  addOrder(order) {\n    // get id of meal\n    // assign it to mealId\n    // pass it along as an order with meal details\n    const { mealId, quantity } = order;\n    dummyDBData.orders.push({\n      mealId,\n      quantity,\n    });\n    return order;\n  },\n  getOrder(id) {\n    const orderedMeal = dummyDBData.meals.find(meal => meal.id === Number(id));\n    const orderedQuantity = dummyDBData.orders.find(order => order.mealId === Number(id));\n    const { quantity } = orderedQuantity;\n    const ordered = {\n      orderedMeal,\n      quantity,\n    };\n    return ordered || {};\n  },\n  updateOrder(id, data) {\n    const alreadyordered = dummyDBData.orders.find(order => order.mealId === Number(id));\n    const index = dummyDBData.orders.indexOf(alreadyordered);\n    dummyDBData.orders[index].mealId = data.mealId || alreadyordered.mealId;\n    dummyDBData.orders[index].quantity = data.quantity || alreadyordered.quantity;\n    return dummyDBData.orders[index];\n  },\n  deleteOrder(id) {\n    const toBeDeletedOrder = dummyDBData.orders.find(order => order.mealId === Number(id));\n    const index = dummyDBData.orders.indexOf(toBeDeletedOrder);\n    dummyDBData.meals.splice(index, 1);\n    return {};\n  },\n};\n\nexport default OrderService;\n"],"file":"order.services.js"}